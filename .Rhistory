plot_final2 = plot_final2 %>%
select(3:986)
plot_final2 = plot_final2 %>%
pivot_longer(-Group, names_to = "SNP_Name", values_to = "SNP_values")
#first I need to convert all the homozygotes the phrase "homozygous"
levels(plot_final2$SNP_values)[match(homozygotes, levels(plot_final2$SNP_values))] = "homozygous"
#now I'm going to change all the missing data to say "missing"
levels(plot_final2$SNP_values)[match(missing_data, levels(plot_final2$SNP_values))] = "missing_data"
#lastly I'm going to convert any other data to heterozygous.
levels(plot_final2$SNP_values)[match(heterozygotes, levels(plot_final2$SNP_values))] = "heterozygotes"
#for the purposes of getting useful information, I want to change the group names to teosinte or maize depending on which category they fall in
levels(plot_final2$Group)[match(maizeTarget, levels(plot_final2$Group))] = "Maize"
levels(plot_final2$Group)[match(teosinteTarget, levels(plot_final2$Group))] = "Teosinte"
ggplot(date = plot_final2) +
geom_bar(mapping = aes(x = plot_final2$Group, fill = plot_final2$SNP_values), position = "fill") +
ggtitle("Density of homo/heterozygous data \nacross Maize and Teosinte groups") +
labs( y = "Density", x = "Samples")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
# Reading in the Data
fang_et_al_genotypes <- data.frame(read_tsv("./fang_et_al_genotypes.txt"))
snp_position <- data.frame(read_tsv("./snp_position.txt"))
# Extracting Maize and Teosinte Groups
maize <- filter(fang_et_al_genotypes, Group == "ZMMIL" | Group == "ZMMLR" | Group == "ZMMMR")
teosinte <- filter(fang_et_al_genotypes, Group == "ZMPBA" | Group == "ZMPIL" | Group == "ZMPJA")
# Cutting Down columns
snp_position <- snp_position %>% select(SNP_ID, Chromosome, Position)
maize <- maize %>% select(-(Sample_ID:Group))
teosinte <- teosinte %>% select(-(Sample_ID:Group))
snp_position <- arrange(snp_position, SNP_ID)
# Transposing the files
transposed_maize <- as.data.frame(t(maize), stringsAsFactors = FALSE)
transposed_teosinte <- as.data.frame(t(teosinte), stringsAsFactors = FALSE)
# Joining Maize/Teosinte and SNP_Position
maize_join <- cbind(snp_position, transposed_maize)
teosinte_join <- cbind(snp_position, transposed_teosinte)
rownames(maize_join) <- NULL
rownames(teosinte_join) <- NULL
# Sorting by increasing Position
sort_maize <- arrange(maize_join, as.numeric(Position))
sort_teosinte <- arrange(teosinte_join, as.numeric(Position))
# Extract Info by Chromosome
chrom_1_maize_Inc <- filter(sort_maize, Chromosome == 1)
chrom_2_maize_Inc <- filter(sort_maize, Chromosome == 2)
chrom_3_maize_Inc <- filter(sort_maize, Chromosome == 3)
chrom_4_maize_Inc <- filter(sort_maize, Chromosome == 4)
chrom_5_maize_Inc <- filter(sort_maize, Chromosome == 5)
chrom_6_maize_Inc <- filter(sort_maize, Chromosome == 6)
chrom_7_maize_Inc <- filter(sort_maize, Chromosome == 7)
chrom_8_maize_Inc <- filter(sort_maize, Chromosome == 8)
chrom_9_maize_Inc <- filter(sort_maize, Chromosome == 9)
chrom_10_maize_Inc <- filter(sort_maize, Chromosome == 10)
write_csv(chrom_1_maize_Inc, "Chromosome1_Maize_Increasing")
write_csv(chrom_2_maize_Inc, "Chromosome2_Maize_Increasing")
write_csv(chrom_3_maize_Inc, "Chromosome3_Maize_Increasing")
write_csv(chrom_4_maize_Inc, "Chromosome4_Maize_Increasing")
write_csv(chrom_5_maize_Inc, "Chromosome5_Maize_Increasing")
write_csv(chrom_6_maize_Inc, "Chromosome6_Maize_Increasing")
write_csv(chrom_7_maize_Inc, "Chromosome7_Maize_Increasing")
write_csv(chrom_8_maize_Inc, "Chromosome8_Maize_Increasing")
write_csv(chrom_9_maize_Inc, "Chromosome9_Maize_Increasing")
write_csv(chrom_10_maize_Inc, "Chromosome10_Maize_Increasing")
chrom_1_teosinte_Inc <- filter(sort_teosinte, Chromosome == 1)
chrom_2_teosinte_Inc <- filter(sort_teosinte, Chromosome == 2)
chrom_3_teosinte_Inc <- filter(sort_teosinte, Chromosome == 3)
chrom_4_teosinte_Inc <- filter(sort_teosinte, Chromosome == 4)
chrom_5_teosinte_Inc <- filter(sort_teosinte, Chromosome == 5)
chrom_6_teosinte_Inc <- filter(sort_teosinte, Chromosome == 6)
chrom_7_teosinte_Inc <- filter(sort_teosinte, Chromosome == 7)
chrom_8_teosinte_Inc <- filter(sort_teosinte, Chromosome == 8)
chrom_9_teosinte_Inc <- filter(sort_teosinte, Chromosome == 9)
chrom_10_teosinte_Inc <- filter(sort_teosinte, Chromosome == 10)
write_csv(chrom_1_teosinte_Inc, "Chromosome1_Teosinte_Increasing")
write_csv(chrom_2_teosinte_Inc, "Chromosome2_Teosinte_Increasing")
write_csv(chrom_3_teosinte_Inc, "Chromosome3_Teosinte_Increasing")
write_csv(chrom_4_teosinte_Inc, "Chromosome4_Teosinte_Increasing")
write_csv(chrom_5_teosinte_Inc, "Chromosome5_Teosinte_Increasing")
write_csv(chrom_6_teosinte_Inc, "Chromosome6_Teosinte_Increasing")
write_csv(chrom_7_teosinte_Inc, "Chromosome7_Teosinte_Increasing")
write_csv(chrom_8_teosinte_Inc, "Chromosome8_Teosinte_Increasing")
write_csv(chrom_9_teosinte_Inc, "Chromosome9_Teosinte_Increasing")
write_csv(chrom_10_teosinte_Inc, "Chromosome10_Teosinte_Increasing")
# Sort by Decreasing Position
sort_maize_dec <- arrange(maize_join, desc(as.numeric(Position)))
sort_teosinte_dec <- arrange(teosinte_join, desc(as.numeric(Position)))
# Replace Missing Data, encoded with ?, with a -
maize_dec <- as.data.frame(lapply(sort_maize_dec, gsub, pattern = "?", replacement = "-", fixed = TRUE))
teosinte_dec <- as.data.frame(lapply(sort_teosinte_dec, gsub, pattern = "?", replacement = "-", fixed = TRUE))
# Extract Info by Chromosome
chrom_1_maize_Dec <- filter(maize_dec, Chromosome == 1)
chrom_2_maize_Dec <- filter(maize_dec, Chromosome == 2)
chrom_3_maize_Dec <- filter(maize_dec, Chromosome == 3)
chrom_4_maize_Dec <- filter(maize_dec, Chromosome == 4)
chrom_5_maize_Dec <- filter(maize_dec, Chromosome == 5)
chrom_6_maize_Dec <- filter(maize_dec, Chromosome == 6)
chrom_7_maize_Dec <- filter(maize_dec, Chromosome == 7)
chrom_8_maize_Dec<- filter(maize_dec, Chromosome == 8)
chrom_9_maize_Dec <- filter(maize_dec, Chromosome == 9)
chrom_10_maize_Dec <- filter(maize_dec, Chromosome == 10)
write_csv(chrom_1_maize_Dec, "Chromosome1_Maize_Decreasing")
write_csv(chrom_2_maize_Dec, "Chromosome2_Maize_Decreasing")
write_csv(chrom_3_maize_Dec, "Chromosome3_Maize_Decreasing")
write_csv(chrom_4_maize_Dec, "Chromosome4_Maize_Decreasing")
write_csv(chrom_5_maize_Dec, "Chromosome5_Maize_Decreasing")
write_csv(chrom_6_maize_Dec, "Chromosome6_Maize_Decreasing")
write_csv(chrom_7_maize_Dec, "Chromosome7_Maize_Decreasing")
write_csv(chrom_8_maize_Dec, "Chromosome8_Maize_Decreasing")
write_csv(chrom_9_maize_Dec, "Chromosome9_Maize_Decreasing")
write_csv(chrom_10_maize_Dec, "Chromosome10_Maize_Decreasing")
chrom_1_teosinte_Dec <- filter(teosinte_dec, Chromosome == 1)
chrom_2_teosinte_Dec <- filter(teosinte_dec, Chromosome == 2)
chrom_3_teosinte_Dec <- filter(teosinte_dec, Chromosome == 3)
chrom_4_teosinte_Dec <- filter(teosinte_dec, Chromosome == 4)
chrom_5_teosinte_Dec <- filter(teosinte_dec, Chromosome == 5)
chrom_6_teosinte_Dec <- filter(teosinte_dec, Chromosome == 6)
chrom_7_teosinte_Dec <- filter(teosinte_dec, Chromosome == 7)
chrom_8_teosinte_Dec<- filter(teosinte_dec, Chromosome == 8)
chrom_9_teosinte_Dec <- filter(teosinte_dec, Chromosome == 9)
chrom_10_teosinte_Dec <- filter(teosinte_dec, Chromosome == 10)
write_csv(chrom_1_teosinte_Dec, "Chromosome1_Teosinte_Decreasing")
write_csv(chrom_2_teosinte_Dec, "Chromosome2_Teosinte_Decreasing")
write_csv(chrom_3_teosinte_Dec, "Chromosome3_Teosinte_Decreasing")
write_csv(chrom_4_teosinte_Dec, "Chromosome4_Teosinte_Decreasing")
write_csv(chrom_5_teosinte_Dec, "Chromosome5_Teosinte_Decreasing")
write_csv(chrom_6_teosinte_Dec, "Chromosome6_Teosinte_Decreasing")
write_csv(chrom_7_teosinte_Dec, "Chromosome7_Teosinte_Decreasing")
write_csv(chrom_8_teosinte_Dec, "Chromosome8_Teosinte_Decreasing")
write_csv(chrom_9_teosinte_Dec, "Chromosome9_Teosinte_Decreasing")
write_csv(chrom_10_teosinte_Dec, "Chromosome10_Teosinte_Decreasing")
library(reshape2)
library(tidyverse)
library(ggplot2)
fang_et_al_genotypes <- data.frame(read_tsv("./fang_et_al_genotypes.txt"))
snp_position <- data.frame(read_tsv("./snp_position.txt"))
fang <- fang_et_al_genotypes %>% select(-(Sample_ID:Group))
snp <- snp_position %>% select(SNP_ID, Chromosome, Position)
fang <- as.data.frame(t(fang), stringsAsFactors = FALSE)
#fang_snp <- merge(snp, fang)
fang_snp <- cbind(snp,fang)
#SNPs per Chromosome:Total # of SNPs in dataset/chromosome. Distribution of SNPS on chromosomes
ggplot(data = fang_snp) + geom_bar(mapping = aes(x = as.numeric(Chromosome)), color = "blue", fill = "blue")
ggplot(data = fang_snp, aes(x = as.numeric(Position))) + geom_density(aes(fill = as.character(Chromosome))) + facet_wrap(~as.character(Chromosome)) + theme_light()
# Missing Data and amount of heterozygosity:
# Melting
fang_et_al_genotypes <- data.frame(read_tsv("./fang_et_al_genotypes.txt"))
melted <- melt(data = fang_et_al_genotypes, id.var = "Sample_ID", measure.var = names(fang_et_al_genotypes[4:986]))
fang_melt <- melted %>% as.matrix()
homo <- replace(fang_melt, fang_melt %in% c("A/A", "T/T", "C/C", "G/G"), "Homozygous")
hetero <- replace(homo, homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Heterozygous")
final <- as.data.frame(replace(hetero, hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "unknown"))
ggplot(data = final) + geom_bar(mapping = aes(x = value), color = "blue", fill = "blue")
library(tidyverse)
library(ggplot2)
# My own Graph
fang_et_al_genotypes <- data.frame(read_tsv("./fang_et_al_genotypes.txt"))
melted <- melt(data = fang_et_al_genotypes, id.var = "Sample_ID", measure.var = names(fang_et_al_genotypes[4:986]))
fang_melt <- melted %>% as.matrix()
A <- replace(fang_melt, fang_melt %in% c("A/A","A/T", "A/G", "A/C"), "A")
C <- replace(A, A %in% c("C/C", "C/A", "C/T", "C/G"), "C")
G <- replace(C, C %in% c("G/G", "G/A", "G/T", "G/C"), "G")
TT <- replace(G, G %in% c("T/T", "T/A", "T/G", "T/C"), "T")
base <- as.data.frame(TT)
ggplot(data = base) + geom_bar(mapping = aes(x = value), color = "blue", fill = "purple")
if (!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
library(tidyr)
genotypes <- read_tsv("./fang_et_al_genotypes.txt")
Teo_genotypes <- filter(genotypes, `Group` %in% c("ZMPBA","ZMPIL","ZMPJA"))
Maize_genotypes <- filter(genotypes, `Group` %in% c("ZMMIL","ZMMLR"," ZMMMR"))
rm(genotypes)
#pivot both sets
Teo_pivot <- pivot_longer(Teo_genotypes, -Sample_ID:-Group, names_to = "SNP_ID", values_to = "Sequence")
Maize_pivot <- pivot_longer(Maize_genotypes, -Sample_ID:-Group, names_to = "SNP_ID", values_to = "Sequence")
rm(Teo_genotypes)
rm(Maize_genotypes)
Teo_p_matrix = as.matrix(Teo_pivot)
Teo_pivot_homo <- replace(Teo_p_matrix, Teo_p_matrix %in% c("T/T", "C/C", "A/A", "G/G"), "Homo")
Teo_pivot_hetero <- replace(Teo_pivot_homo, Teo_pivot)homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Hetero")
Teo_pivot_hetero <- replace(Teo_pivot_homo, Teo_pivot_homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Hetero")
Teo_heterozygosity <- as.data.frame(replace(Teo_pivot_hetero, Teo_pivot_hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "Unknown"))
rm(Teo_p_matrix)
rm(Teo_pivot_hetero)
rm(Teo_pivot_homo)
Teo_heterozygosity
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = value), fill = Sequence)
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = value), fill = Teo_heterozygosity$Sequence)
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Group), fill = Sequence)
Teo_heterozygosity
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = `Group`), fill = `Sequence`)
Teo_heterozygosity
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group), fill = Teo_heterozygosity$Sequence)
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group),color = "blue", fill = "blue")
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence, position = "fill"))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group,y=..density.., fill = Teo_heterozygosity$Sequence))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(Group = Teo_heterozygosity$Group, y=..density.., fill = Teo_heterozygosity$Sequence))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(group = Teo_heterozygosity$Group, y=..density.., fill = Teo_heterozygosity$Sequence))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = bin, group = Teo_heterozygosity$Group, y=..density.., fill = Teo_heterozygosity$Sequence))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence, position = "fill"))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, color = Teo_heterozygosity$Sequence, position = "fill"))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence), position = "fill"))
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence), position = "fill")
print(Group_heterozygosityggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence), position = "fill"))
print(ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence), position = "fill"))
print(ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Sample_ID, fill = Teo_heterozygosity$Sequence), position = "fill"))
#Teosinte
Teo_p_matrix = as.matrix(Teo_pivot)
Teo_pivot_homo <- replace(Teo_p_matrix, Teo_p_matrix %in% c("T/T", "C/C", "A/A", "G/G"), "Homo")
Teo_pivot_hetero <- replace(Teo_pivot_homo, Teo_pivot_homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Hetero")
Teo_heterozygosity <- as.data.frame(replace(Teo_pivot_hetero, Teo_pivot_hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "Unknown"))
rm(Teo_p_matrix)
rm(Teo_pivot_hetero)
rm(Teo_pivot_homo)
#Maize
Maize_p_matrix = as.matrix(Maize_pivot)
M_pivot_homo <- replace(Maize_p_matrix, Maize_p_matrix %in% c("T/T", "C/C", "A/A", "G/G"), "Homo")
M_pivot_hetero <- replace(M_pivot_homo, M_pivot_homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Hetero")
Maize_heterozygosity <- as.data.frame(replace(M_pivot_hetero, M_pivot_hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "Unknown"))
rm(Maize_p_matrix)
rm(M_pivot_hetero)
rm(M_pivot_homo)
#Teosinte
#Graph heterozygosity vs Group
print(ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence), position = "fill"))
#Graph heterozygosity vs Sample_ID
print(ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Sample_ID, fill = Teo_heterozygosity$Sequence), position = "fill"))
#Maize
#Graph heterozygosity vs Group
print(ggplot(data = Maize_heterozygosity) + geom_bar(mapping = aes(x = Maize_heterozygosity$Group, fill = Maize_heterozygosity$Sequence), position = "fill"))
#Graph heterozygosity vs Sample_ID
print(ggplot(data = Maize_heterozygosity) + geom_bar(mapping = aes(x = Maize_heterozygosity$Sample_ID, fill = Maize_heterozygosity$Sequence), position = "fill"))
#Teosinte
#Graph heterozygosity vs Group
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Group, fill = Teo_heterozygosity$Sequence), position = "fill")
#Graph heterozygosity vs Sample_ID
ggplot(data = Teo_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Sample_ID, fill = Teo_heterozygosity$Sequence), position = "fill")
#Maize
#Graph heterozygosity vs Group
ggplot(data = Maize_heterozygosity) + geom_bar(mapping = aes(x = Maize_heterozygosity$Group, fill = Maize_heterozygosity$Sequence), position = "fill")
#Graph heterozygosity vs Sample_ID
ggplot(data = Maize_heterozygosity) + geom_bar(mapping = aes(x = Maize_heterozygosity$Sample_ID, fill = Maize_heterozygosity$Sequence), position = "fill")
#Maize
Maize_heterozygosity
#Maize
Maize_heterozygosity[,3]
#Maize
filter(Maize_heterozygosity,`ZMMMR`)
#Maize
filter(Maize_heterozygosity,`ZMMLR`)
#Maize
filter(Maize_heterozygosity,c("ZMMMR") )
#Maize
filter(Maize_heterozygosity,`Group` %in% c("ZMMMR")) )
#Maize
filter(Maize_heterozygosity,`Group` %in% c("ZMMMR"))
genotypes <- read_tsv("./fang_et_al_genotypes.txt")
filter(genotypes, `Group` %in% c(" ZMMMR"))
rm(genotypes)
genotypes <- read_tsv("./fang_et_al_genotypes.txt")
Teo_genotypes <- filter(genotypes, `Group` %in% c("ZMPBA","ZMPIL","ZMPJA"))
Maize_genotypes <- filter(genotypes, `Group` %in% c("ZMMIL","ZMMLR"," ZMMMR"))
rm(genotypes)
#pivot both sets
Teo_pivot <- pivot_longer(Teo_genotypes, -Sample_ID:-Group, names_to = "SNP_ID", values_to = "Sequence")
Maize_pivot <- pivot_longer(Maize_genotypes, -Sample_ID:-Group, names_to = "SNP_ID", values_to = "Sequence")
rm(Teo_genotypes)
rm(Maize_genotypes)
Maize_pivot
Teo_merge_q
#pivot both sets
Teo_myplot <- pivot_longer(Teo_merge_q, -Chromosome:-Position, names_to = "SNP_ID", values_to = "Sequence")
Teo_myplot
#pivot both sets
Teo_myplot <- pivot_longer(Teo_merge_q, -Chromosome, names_to = "SNP_ID", values_to = "Sequence")
#pivot both sets
Teo_myplot <- pivot_longer(Teo_merge_q, -SNP_ID:-Position, names_to = "SNP_ID", values_to = "Sequence")
#pivot both sets
Teo_myplot <- pivot_longer(Teo_merge_q, -SNP_ID:-Position, names_to = "names", values_to = "Sequence")
Teo_myplot
# Convert pivoted data to a matrix so its SNPs can be replaced with "Homo", "Hetero" or "Unknown"
Teo_p_matrix = as.matrix(Teo_myplot)
Teo_pivot_homo <- replace(Teo_p_matrix, Teo_p_matrix %in% c("T/T", "C/C", "A/A", "G/G"), "Homo")
Teo_chromosome_heterozygosity <- as.data.frame(replace(Teo_pivot_hetero, Teo_pivot_hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "Unknown"))
Teo_pivot_hetero <- replace(Teo_pivot_homo, Teo_pivot_homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Hetero")
Teo_chromosome_heterozygosity <- as.data.frame(replace(Teo_pivot_hetero, Teo_pivot_hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "Unknown"))
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Teo_heterozygosity$Chromosome, fill = Teo_heterozygosity$Sequence), position = "fill")
Teo_chromosome_heterozygosity
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Teo_chromosome_heterozygosity$Chromosome, fill = Teo_chromosome_heterozygosity$Sequence), position = "fill")
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Teo_chromosome_heterozygosity$Chromosome, fill = Teo_chromosome_heterozygosity$Sequence)
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Teo_chromosome_heterozygosity$Chromosome, fill = Teo_chromosome_heterozygosity$Sequence))
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Teo_chromosome_heterozygosity$Chromosome, fill = Teo_chromosome_heterozygosity$Sequence), position = "fill") + facet_wrap( ~ Chromosome,ncol=3)
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Teo_chromosome_heterozygosity$Chromosome, fill = Teo_chromosome_heterozygosity$Sequence), position = "fill") + facet_wrap( ~ Chromosome,ncol=2)
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Teo_chromosome_heterozygosity$Chromosome, fill = Teo_chromosome_heterozygosity$Sequence))
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Chromosome, fill = Teo_chromosome_heterozygosity$Sequence))
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Chromosome, fill = Teo_chromosome_heterozygosity$Sequence), position = "fill")
#Graph Heterozygosity vs Chromsome
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Chromosome, fill = Teo_chromosome_heterozygosity$Sequence), position = "fill") + scale_x_discrete(labels=c("1","10","2","3","4","5","6","7","8","9","Mult.","Unk"))
genotypes <- read_tsv("./fang_et_al_genotypes.txt")
#pivot both sets
Teo_myplot <- pivot_longer(Teo_merge_q, -SNP_ID:-Position, names_to = "names", values_to = "Sequence")
Maize_myplot <- pivot_longer(Maize_merge_q, -Sample_ID:-Group, names_to = "SNP_ID", values_to = "Sequence")
rm(genotypes)
#pivot both sets
Teo_myplot <- pivot_longer(Teo_merge_q, -SNP_ID:-Position, names_to = "names", values_to = "Sequence")
Maize_myplot <- pivot_longer(Maize_merge_q, -SNP_ID:-Group, names_to = "SNP_ID", values_to = "Sequence")
#pivot both sets
Teo_myplot <- pivot_longer(Teo_merge_q, -SNP_ID:-Position, names_to = "names", values_to = "Sequence")
Maize_myplot <- pivot_longer(Maize_merge_q, -SNP_ID:-Position, names_to = "names", values_to = "Sequence")
# Convert pivoted data to a matrix so its SNPs can be replaced with "Homo", "Hetero" or "Unknown"
#Teosinte
Teo_p_matrix = as.matrix(Teo_myplot)
rm(Teo_myplot)
Teo_pivot_homo <- replace(Teo_p_matrix, Teo_p_matrix %in% c("T/T", "C/C", "A/A", "G/G"), "Homo")
Teo_pivot_hetero <- replace(Teo_pivot_homo, Teo_pivot_homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Hetero")
Teo_chromosome_heterozygosity <- as.data.frame(replace(Teo_pivot_hetero, Teo_pivot_hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "Unknown"))
rm(Teo_p_matrix)
rm(Teo_pivot_hetero)
rm(Teo_pivot_homo)
#Maize
Maize_p_matrix = as.matrix(Maize_myplot)
rm(Maize_myplot)
M_pivot_homo <- replace(Maize_p_matrix, Maize_p_matrix %in% c("T/T", "C/C", "A/A", "G/G"), "Homo")
M_pivot_hetero <- replace(M_pivot_homo, M_pivot_homo %in% c("A/T", "A/C", "A/G", "T/A", "T/C", "T/G", "C/A", "C/G", "C/T", "G/A", "G/C", "G/T"), "Hetero")
Maize_chromosome_heterozygosity <- as.data.frame(replace(M_pivot_hetero, M_pivot_hetero %in% c("?/?", "?/A", "A/?", "T/?", "?/T", "C/?", "?/C", "G/?", "?/G"), "Unknown"))
rm(Maize_p_matrix)
rm(M_pivot_hetero)
rm(M_pivot_homo)
#Graph Heterozygosity vs Chromsome
#Teosinte
ggplot(data = Teo_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Chromosome, fill = Teo_chromosome_heterozygosity$Sequence), position = "fill") + scale_x_discrete(labels=c("1","10","2","3","4","5","6","7","8","9","Mult.","Unk"))
#Maize
ggplot(data = Maize_chromosome_heterozygosity) + geom_bar(mapping = aes(x = Chromosome, fill = Maize_chromosome_heterozygosity$Sequence), position = "fill") + scale_x_discrete(labels=c("1","10","2","3","4","5","6","7","8","9","Mult.","Unk"))
library(phyloseq)
library(phyloseq)
library(tidyverse)
seeds <- readRDS("seeds.RDS")
pulp <- readRDS("fruit_pulp.RDS")
setwd("C:/Users/Owner/Desktop/Apples/PhyloObj")
seeds <- readRDS("seeds.RDS")
ls
pwd
wd
setwd("C:/Users/Owner/Desktop/Apples")
seeds <- readRDS("./PhyloObj/seeds.RDS")
pulp <- readRDS("./PhyloObj/fruit_pulp.RDS")
calyx <- readRDS("./PhyloObj/calyx_end.RDS")
peel <- readRDS("./PhyloObj/peel.RDS")
stem <- readRDS("./PhyloObj/Stem.RDS")
seeds <- readRDS("./PhyloObj/seeds.RDS")
pulp <- readRDS("./PhyloObj/fruit_pulp.RDS")
calyx <- readRDS("./PhyloObj/calyx_end.RDS")
peel <- readRDS("./PhyloObj/peel.RDS")
stem <- readRDS("./PhyloObj/Stem.RDS")
stem_end <- readRDS("./PhyloObj/Stem_end.RDS")
apples <- merge_phyloseq(stem,stem_end,peel,pulp,seeds,calyx)
otu_table_copy <- apples@otu_table
rows <- nrow(otu_table_copy)
reads <- c()
sample_name <- c()
#fill the lists by reading each row's sum and name
for (i in 1:nrow(otu_table_copy)) {
total_reads <- sum(otu_table_copy[i])
sample <- row.names(otu_table_copy[i])
reads[i] <- total_reads
sample_name[i] <- sample
}
sample_name
reads
reads_count.data <- data.frame(sample_name,reads)
reads_count.data
ggplot(data=reads_count.data, aes(x=sample_name, y=reads,fill=sample_name), width = 600) +
geom_bar(stat="identity",  position = position_dodge(width = 5))+
geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=reads_count.data, aes(x=sample_name, y=reads,fill=sample_name), width = 600) +
geom_bar(stat="identity",  position = position_dodge(width = 5))+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
reads_count.data[grep(".C", reads_count.data$sample_name), ]
conventional <- reads_count.data[grep(".C", reads_count.data$sample_name), ]
ggplot(data=conventional, aes(x=sample_name, y=reads,fill=sample_name), width = 600) +
geom_bar(stat="identity",  position = position_dodge(width = 5))+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
conventional$sample_name[1]
conventional
mutate(conventional, name_abbreviation = c(St10,St11,St8,St9,StE10,StE11,StE8,St9,Pe10,Pe11,Pe12,Pe9,Fr10,Fr11,Fr12,Fr8,Se10,Se11,Se12,Se9,Ca10,Ca11,Ca8,Ca9))
mutate(conventional, name_abbreviation = c("St10","St11","St8","St9","StE10","StE11","StE8","St9","Pe10","Pe11","Pe12","Pe9","Fr10","Fr11","Fr12","Fr8","Se10","Se11","Se12","Se9","Ca10","Ca11","Ca8","Ca9"))
ggplot(data=conventional, aes(x=name_abbreviation, y=reads,fill=sample_name), width = 600) +
geom_bar(stat="identity",  position = position_dodge(width = 5))+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
conventional
conventional <- mutate(conventional, name_abbreviation = c("St10","St11","St8","St9","StE10","StE11","StE8","St9","Pe10","Pe11","Pe12","Pe9","Fr10","Fr11","Fr12","Fr8","Se10","Se11","Se12","Se9","Ca10","Ca11","Ca8","Ca9"))
conventional
ggplot(data=conventional, aes(x=name_abbreviation, y=reads,fill=sample_name), width = 600) +
geom_bar(stat="identity",  position = position_dodge(width = 5))+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=conventional, aes(x=name_abbreviation, y=reads,fill=sample_name)) +
geom_bar(stat="identity",  position = position_dodge(width = 1))+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=conventional, aes(x=name_abbreviation, y=reads,fill=sample_name)) +
geom_bar(stat="identity")+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
conventional <- reads_count.data[grep(".C", reads_count.data$sample_name), ]
conventional <- mutate(conventional, name_abbreviation = c("St10","St11","St8","St9","StE10","StE11","StE8","StE9","Pe10","Pe11","Pe12","Pe9","Fr10","Fr11","Fr12","Fr8","Se10","Se11","Se12","Se9","Ca10","Ca11","Ca8","Ca9"))
conventional
conventional
```{r}
ggplot(data=conventional, aes(x=name_abbreviation, y=reads,fill=sample_name)) +
geom_bar(stat="identity")+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
conventional <- reads_count.data[grep(".C", reads_count.data$sample_name), ]
conventional <- mutate(conventional, num_code = c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24"))
conventional
conventional
```{r}
ggplot(data=conventional, aes(x=name_abbreviation, y=reads,fill=sample_name)) +
geom_bar(stat="identity")+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_name)) +
geom_bar(stat="identity")+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
conventional <- reads_count.data[grep(".C", reads_count.data$sample_name), ]
conventional <- mutate(conventional, num_code = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24))
conventional
conventional
```{r}
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_name)) +
geom_bar(stat="identity")+
#geom_text(aes(label=reads), vjust=-0.3, size=3.5)+
theme_minimal()
organic <- reads_count.data[grep(".H", reads_count.data$sample_name), ]
organic <- mutate(organic, num_code = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24))
organic
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_name)) +
geom_bar(stat="identity")
ggplot(data=organic, aes(x=num_code, y=reads,fill=sample_name)) +
geom_bar(stat="identity")
mutate(conventional, sample_type = c("stem","stem","stem","stem","Stem end","Stem end", "Stem end", "Stem end", "Peel", "Peel","Peel","Peel","Fruit pulp","Fruit pulp","Fruit pulp", "Fruit pulp", "Seed","Seed","Seed","Seed","Calyx end","Calyx end","Calyx end", "Calyx end"))
conventional <- mutate(conventional, sample_type = c("stem","stem","stem","stem","Stem end","Stem end", "Stem end", "Stem end", "Peel", "Peel","Peel","Peel","Fruit pulp","Fruit pulp","Fruit pulp", "Fruit pulp", "Seed","Seed","Seed","Seed","Calyx end","Calyx end","Calyx end", "Calyx"))
conventional
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) +
geom_bar(stat="identity")
conventional <- mutate(conventional, sample_type = c("stem","stem","stem","stem","Stem end","Stem end", "Stem end", "Stem end", "Peel", "Peel","Peel","Peel","Fruit pulp","Fruit pulp","Fruit pulp", "Fruit pulp", "Seed","Seed","Seed","Seed","Calyx end","Calyx end","Calyx end", "Calyx end"))
conventional <- reads_count.data[grep(".C", reads_count.data$sample_name), ]
conventional <- mutate(conventional, num_code = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24))
conventional <- mutate(conventional, sample_type = c("stem","stem","stem","stem","Stem end","Stem end", "Stem end", "Stem end", "Peel", "Peel","Peel","Peel","Fruit pulp","Fruit pulp","Fruit pulp", "Fruit pulp", "Seed","Seed","Seed","Seed","Calyx end","Calyx end","Calyx end", "Calyx end"))
conventional
**Graph of Conventional samples**
```{r}
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) +
geom_bar(stat="identity")
```
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) +
geom_bar(stat="identity")
conventional <- reads_count.data[grep(".C", reads_count.data$sample_name), ]
conventional <- mutate(conventional, num_code = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24))
conventional <- mutate(conventional, sample_type = c("stem","stem","stem","stem","Stem end","Stem end", "Stem end", "Stem end", "Peel", "Peel","Peel","Peel","Fruit pulp","Fruit pulp","Fruit pulp", "Fruit pulp", "Seed","Seed","Seed","Seed","Calyx end","Calyx end","Calyx end", "Calyx end"))
conventional
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) +
geom_bar(stat="identity")
organic <- reads_count.data[grep(".H", reads_count.data$sample_name), ]
organic <- mutate(organic, num_code = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24))
organic <- mutate(organic, sample_type = c("stem","stem","stem","stem","Stem end","Stem end", "Stem end", "Stem end", "Peel", "Peel","Peel","Peel","Fruit pulp","Fruit pulp","Fruit pulp", "Fruit pulp", "Seed","Seed","Seed","Seed","Calyx end","Calyx end","Calyx end", "Calyx end"))
organic
organic
**Graph of Conventional samples**
```{r}
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) +
geom_bar(stat="identity")
```
**Graph of Organic Samples**
```{r}
ggplot(data=organic, aes(x=num_code, y=reads,fill=sample_name)) +
geom_bar(stat="identity")
```
ggplot(data=organic, aes(x=num_code, y=reads,fill=sample_type)) +
geom_bar(stat="identity")
organic <- reads_count.data[grep(".H", reads_count.data$sample_name), ]
organic <- mutate(organic, num_code = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24))
organic <- mutate(organic, sample_type = c("stem","stem","stem","stem","Stem end","Stem end", "Stem end", "Stem end", "Peel", "Peel","Peel","Peel","Fruit pulp","Fruit pulp","Fruit pulp", "Fruit pulp", "Seed","Seed","Seed","Seed","Calyx end","Calyx end","Calyx end", "Calyx end"))
organic
ggplot(data=organic, aes(x=num_code, y=reads,fill=sample_type)) +
geom_bar(stat="identity")
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) + ylab("Number of Reads")+
geom_bar(stat="identity")
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) + ylab("Number of Reads")+ xlab("Sample Number")+ ggtitle("Conventional")
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) + ylab("Number of Reads")+ xlab("Sample Number")+ ggtitle("Conventional")+
geom_bar(stat="identity")
ggplot(data=organic, aes(x=num_code, y=reads,fill=sample_type)) +ylab("Number of Reads")+ xlab("Sample Number")+ ggtitle("Organic Apples")+
geom_bar(stat="identity")
ggplot(data=conventional, aes(x=num_code, y=reads,fill=sample_type)) + ylab("Number of Reads")+ xlab("Sample Number")+ ggtitle("Conventional Apples")+
geom_bar(stat="identity")
